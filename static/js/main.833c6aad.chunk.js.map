{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onClick","onChangeQuery","query","sortBy","select","selectedUserId","className","type","value","onChange","map","todo","classNames","completed","checked","title","userId","id","BASE_URL","getTodos","a","fetch","response","json","getUser","CurrentUser","state","user","isUser","this","loadData","prevProps","props","String","setState","clear","name","email","phone","React","PureComponent","App","visibleTodos","handleChangeUserId","handlerClear","getVisibleTodos","filter","lowerQuery","toLocaleLowerCase","toLowerCase","includes","handleSelectTodos","event","target","handleChangeQuery","filteredTodos","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.833c6aad.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  onClick: (id: number) => void,\n  onChangeQuery: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  query: string,\n  sortBy: string,\n  select: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  selectedUserId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onClick,\n  onChangeQuery,\n  query,\n  sortBy,\n  select,\n  selectedUserId,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <p>Seach todo:</p>\n      <input type=\"text\" value={query} onChange={onChangeQuery} />\n      <select\n        value={sortBy}\n        onChange={select}\n      >\n        <option value=\"all\">All todos</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={classNames(\n              'TodoList__item',\n              {\n                'TodoList__item--unchecked': !todo.completed,\n                'TodoList__item--checked': todo.completed,\n              },\n            )}\n            key={todo.id}\n          >\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n            />\n            <p>{todo.title}</p>\n\n            <button\n              className={classNames(\n                'button',\n                'TodoList__user-button',\n                { 'TodoList__user-button--selected': todo.userId === selectedUserId },\n              )}\n              type=\"button\"\n              onClick={() => onClick(todo.userId)}\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async () => {\n  const response = await fetch(`${BASE_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUser = async (id: string) => {\n  const response = await fetch(`${BASE_URL}/users/${id}`);\n\n  return response.json();\n};\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  clear: () => void,\n};\n\ntype State = {\n  user: User | null,\n  isUser: boolean,\n};\n\nexport class CurrentUser extends React.PureComponent<Props, State> {\n  state: State = {\n    user: null,\n    isUser: false,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.userId !== prevProps.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { userId } = this.props;\n\n    try {\n      const user = await getUser(String(userId));\n\n      this.setState({\n        user,\n        isUser: true,\n      });\n    } catch (error) {\n      this.setState({ isUser: false });\n    }\n  }\n\n  render() {\n    const { user, isUser } = this.state;\n    const { clear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        {user && isUser\n          ? (\n            <>\n              <h2 className=\"CurrentUser__title\">\n                <span>\n                  Selected user:\n                  {' '}\n                  {user.id}\n                </span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n            </>\n          )\n          : <h3 className=\"CurrentUser__name\">User is not defined</h3>}\n        <button\n          className=\"button CurrentUser__clear\"\n          type=\"button\"\n          onClick={clear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\ninterface State {\n  selectedUserId: number;\n  visibleTodos: Todo[];\n  query: string;\n  sortBy: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    visibleTodos: [],\n    query: '',\n    sortBy: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ visibleTodos: todos });\n  }\n\n  handleChangeUserId = (id: number) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  };\n\n  handlerClear = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  getVisibleTodos = () => {\n    const { query, visibleTodos, sortBy } = this.state;\n\n    let todos;\n\n    switch (sortBy) {\n      case 'active':\n        todos = visibleTodos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        todos = visibleTodos.filter(todo => todo.completed);\n        break;\n      default:\n        todos = visibleTodos;\n    }\n\n    return todos.filter(todo => {\n      const { title } = todo;\n      const lowerQuery = query.toLocaleLowerCase();\n\n      return title.toLowerCase().includes(lowerQuery);\n    });\n  };\n\n  handleSelectTodos = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ sortBy: event.target.value });\n  };\n\n  handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  render() {\n    const { selectedUserId, query, sortBy } = this.state;\n    const filteredTodos = this.getVisibleTodos();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={filteredTodos}\n            onClick={this.handleChangeUserId}\n            onChangeQuery={this.handleChangeQuery}\n            query={query}\n            sortBy={sortBy}\n            select={this.handleSelectTodos}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clear={this.handlerClear} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}